[tool.poetry]
name = 'e_lims_cookiecutter_template'
version = '0.3.0'
description = 'E-lims Cookiecutter Template.'
readme = 'README.md'
authors = ['Fabien Meyer <fabien-meyer@outlook.com>']
license = 'MIT'
include = ['e_lims_cookiecutter_template/py.typed']

[tool.poetry.dependencies]
python = '^3.12'
typing-extensions = '^4.12.2'

[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
myst-parser = '^3.0.1'
sphinx = '^7.3.7'
sphinx-autodoc-typehints = '^2.1.1'
sphinx-rtd-theme = '^2.0.0'
sphinxcontrib-mermaid = '^0.9.2'

[tool.poetry.group.dev.dependencies]
cookiecutter = '^2.6.0'
cruft = '^2.15.0'
mypy = '^1.10.0'
pre-commit = '^3.7.1'
pytest = '^8.2.2'
pytest-cov = '^5.0.0'
pytest-cookies = '^0.7.0'
python-semantic-release = "^9.8.3"
ruff = '^0.4.8'
tox = '^4.15.1'

[tool.mypy]
follow_imports = 'normal'
strict_equality = true
warn_unused_configs = true
disallow_subclassing_any = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true

[[tool.mypy.overrides]]
module = 'tests'
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = 'pytest'
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = 'pytest_cookies'
ignore_missing_imports = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ['ALL']
ignore = ['D211', 'D213', 'Q000', 'Q003', 'COM812', 'ISC001']

[tool.ruff.lint.per-file-ignores]
'**/{tests}/*' = ['S101']

[tool.ruff.format]
quote-style = 'single'
indent-style = 'space'

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true



[build-system]
requires = []
build-backend = 'poetry.core.masonry.api'
